---
import Dropdown from "../components/Dropdown.astro"

interface Props{
    label : string;
    name : string;
    type : string;
    errorMessage : string;
    nameClass : string;
    options :[string] ;
}

const { label, name, type, errorMessage, nameClass,options } = Astro.props;
---
  <div class={nameClass}>
      <label for={name}>{label}:</label>
      {
        type === 'select' ? (
          <Dropdown name={name} options={options} errorMessage={errorMessage} />
        ):(
          <input class={name} required
            name={name} 
            type= {type}
            id= {name}
            placeholder={label}
          />
        )
      }
      <span class="error hidden">{errorMessage}</span>
  </div>

<style>

  div {
  width: 100%;
  display: flex;
  flex-direction: column;
  text-align: center;
  justify-content: center;
  gap: 0.5em;
  position: relative;
}

label {
  text-align: left;
  font-size: 1rem;
  font-weight: 600;
  color: #374151;
}

input {
  padding: 1rem;
  font-size: 1rem;
  border: 1px solid #E5E7EB;
  border-radius: 0.75rem;
  background-color: #F9FAFB;
  color: #111827;
  transition: border 0.3s ease, box-shadow 0.3s ease;
}

input:focus {
  border-color: var(--color-gold-cta);
  outline: none;
  box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-gold-cta) 30%, white);
}

input::-webkit-inner-spin-button,
input::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.error {
  position: absolute;
  top: 100%;
  left: 0;
  transform: translateY(6px);
  background-color: #ef4444;
  color: white;
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  font-weight: 500;
  white-space: nowrap;
  z-index: 10;
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
}

.error::after {
  content: "";
  position: absolute;
  top: -6px;
  left: 1.5rem;
  border-width: 6px;
  border-style: solid;
  border-color: transparent transparent #ef4444 transparent;
}

.hidden {
  display: none;
}

</style>