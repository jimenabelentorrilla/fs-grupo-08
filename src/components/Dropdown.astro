---

interface Props{
    name : string;
    options :[string] ;
    errorMessage : string
}


const { name, options, errorMessage } = Astro.props;
---
<body>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</body>

<select class={name} name={name} id={name} required >
  <option class="option" value="">Seleccione...</option>
  {
    options.map(option => (
      <option class="option" value={option} >{option}</option>
  ))}
</select>

<style>
  select{
    width: var(--size-input);
    margin: 0 auto;
    font-size: var(--size-text);
    text-decoration: none;
    border: none;
    font-family: var(--font-family-text);
    background-color: oklch(0.3987 0.0291 48.28);
    color: white;

    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }

  .option{
    font-size: 20px;
    
    color: white;
    font-family: var(--font-family-text);
    text-align: center;
  }
  @media screen and (min-width : 768px) {
    select{
      width: var(--size-input-tablet);
      font-size: 1.7em;
      height: var(--size-input-height-tablet);
    }
  }
  @media screen and (min-width : 992px) {
    select{
      font-size: var(--size-text-desktop);
      height: var(--size-input-height-desktop);
      width: var(--size-input-width-desktop);
      text-align: center;
    }
    .option{
      margin: auto 0;
    }
  }
  @media screen and (min-width : 1920px){
    select{
      width: 18vw;
      height: 4vh;
    }
  }
</style>