---
import Layout from '@layouts/Layout.astro';
import CategoryFilter from '@components/CategoryFilter.astro';
import ProductCard from '@components/ProductCard.astro';
import products from '../data/products.json';
---

<Layout title="Restó Bodegón - Menú">
    <section class="header-menu">
        <div class="cnt-title-menu">
            <h1>Descubrí nuestro menú</h1>
            <p class="menu-subtitle">Comida casera, sabores auténticos.</p>
        </div>
    </section>
	<CategoryFilter />
    <main class="main-menu">
        <div class="container-products">
            
            {products.map((product) => {
                return (
                    <ProductCard 
                        key={product.product.toLowerCase()} 
                        name={product.product} 
                        price={product.price} 
                        image={product.image} 
                        category={product.category}
                    />
                );
                })}
        </div>
    </main>
</Layout>

<style>
    /**Header Menu **/
    .header-menu {
        position: relative;
        background: url("/banner-06.webp") center/cover no-repeat;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 4rem 2rem;
        height: calc(80vh - 90px);
        text-align: center;
        isolation: isolate;
    }

    .header-menu::before {
        content: '';
        position: absolute;
        inset: 0;
        background: linear-gradient(to bottom, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.6));
        z-index: -1;
    }
    .cnt-title-menu{
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }
    .cnt-title-menu h1{
        color: #FFFFFF;  /* fallback */
        color: oklch(1 0 0);
        /**font-size: 1.6rem;*/
        font-family: var(--font-family-title);
        font-weight: 700;
        font-style: normal;
        padding: 1em;
    }
    .menu-subtitle {
        font-family: var(--font-family-text);
        color: #f3f4f6;
        font-size: 1.2rem;
        font-weight: 300;
    }

    /**Contenedor productos */
    .main-menu{
        padding: 1.5rem;
    }
    .container-products {
         display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 2.5rem;
        margin-inline: auto;
        max-width: 1200px;
        padding-block: 2rem;
    }
    /* Mobile  (<= 768px) */
    @media screen and (max-width: 767.99px){
        .cnt-title-menu h1{
            font-size: 2.7rem;
        }
    }
        /* Tablets (≥768px) */
    @media screen and (min-width: 768px) {
        .cnt-title-menu h1{
            font-size: 2rem;
        }
        .main-menu{
            padding: 2rem;
        }
        .container-products {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    /* Desktops (≥992px) */
    @media screen and (min-width: 992px) {
        .cnt-title-menu h1{
            font-size: 2.1rem;
        }
        .main-menu{
            padding: 2.2rem;
        }
        .container-products {
            grid-template-columns: repeat(3, 1fr);
        }
    }

    /* Large desktops (≥1200px) */
    @media screen and (min-width: 1200px) {
        .cnt-title-menu h1{
            font-size: 2.5rem;
        }
        .main-menu{
            padding: 2.5rem;
        }
        .container-products {
            grid-template-columns: repeat(3, 1fr);
        }
    }

</style>
<script>
    /** Corregir bug, solo funciona al hacer click una sola vez **/ 
	document.addEventListener('DOMContentLoaded', () => {
	const buttons = document.querySelectorAll('.button-menu');
	const products = document.querySelectorAll('.product');

  buttons.forEach(button => {
    button.addEventListener('click', () => {
      // Clase activa
      buttons.forEach(b => b.classList.remove('active'));
      button.classList.add('active');

      const category = button.id;

      products.forEach(product => {
        const productCategory = product.dataset.category.toLowerCase();
        if (category === 'todos' || category === productCategory) {
          product.style.display = 'block';
        } else {
          product.style.display = 'none';
        }
      });
    });
  });
});
</script>