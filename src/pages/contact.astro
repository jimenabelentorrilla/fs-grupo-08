---
import { DataContactInput } from "src/mocks/DataContact.astro"
import Layout from "../layouts/Layout.astro"
import Input from "@components/Input.astro"
---

<Layout>
    <main class="contact">
        <header class="contact__header">
            <h1 class="contact__title">Contacto</h1>
        </header>
        <section class="contact__info">
            <h2 class="contact__subtitle">¿Querés hacernos una consulta o sugerencia? Completá el formulario y te responderemos a la brevedad.</h2>
            <form class="contact__form" id="contact__form" novalidate>
                <section class="contact__items">
                    {
                    DataContactInput.map((input) => {
                        return <Input {...input}></Input>
                    })
                    }
                    <label class="contact__label" for="message">Mensaje</label>
                    <textarea
                    name="message"
                    id="message"
                    rows="4"
                    placeholder="Escribí tu mensaje acá..."></textarea>
                </section>
                <button type="submit" id="contact_send">Enviar mensaje</button>
                <div class="contact__thank">
                    <i class="fa-solid fa-check"></i>
                    <p>¡Gracias por escribirnos! Te contactaremos pronto.</p>
                </div>
            </form>
        </section>
    </main>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const $formInputs = document.querySelectorAll('input[name]');
            const $form = document.getElementById('contact__form');
            const $submitButton = document.getElementById('contact_send');
            $submitButton.disabled = !$form.checkValidity()

            const validateName = (name) => /^[a-zA-Z\s]+$/.test(name) && name.length > 0;
            const validateEmail = (email) => /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(email) && email.length > 0;

            const DEFAULT_FUNCTION = (_) => true;
            const VALIDATION_FUNCTIONS = {
                'full-name' : validateName,
                'email' : validateEmail
            };
            const isValueValid =  ( name, value ) =>{
                const validationFunction = VALIDATION_FUNCTIONS[name] ?? DEFAULT_FUNCTION;  
                return validationFunction(value);
            };
            const isAllValid = () =>{
                let isValid = true;
                $formInputs.forEach( (input) => {
                    if( ! isValueValid( input.name, input.value ) )
                    isValid = false;  
                } )
                return isValid;
            };

            $formInputs.forEach( (input) => {
                input.addEventListener('input', () =>{
                    const {name, value} = input;
                    const isValid = isValueValid( name,value );
                    const msjError = input.nextElementSibling;
                    msjError.classList.toggle('hidden', isValid)
                    const $submitButton = document.getElementById('contact_send');
                    if( ! isValid )
                        $submitButton.disabled = true;
                    else
                        $submitButton.disabled = !(isAllValid());
                });

                input.addEventListener('blur', () => {
                    const msjError = input.nextElementSibling;
                    msjError.classList.toggle('hidden', true);
                });
            });

            $form.addEventListener('submit', (e) => {
            e.preventDefault();

            const $msg = document.getElementById('message');
            const formData = new FormData($form);
            const fullName = formData.get('full-name');
            const email = formData.get('email');
            const message = $msg.value;
            

            const newContact = {
                fullName,
                email,
                message
            };

            sessionStorage.setItem(`${email}`, JSON.stringify(newContact));

            const $thankMsg = document.querySelector('.contact__thank');
            $thankMsg.classList.add('visible');
            setTimeout(() => {
                $thankMsg.classList.remove('visible');
                }, 5000);

            $form.reset();

            $submitButton.disabled = true;

            console.log(newContact);

            });

        });
    </script>
</Layout>